
pypy:
====
安装
```
$ yum install -y pypy
```

优点：
1.  gevent和pypy可以更好的提高效率，在pypy层次下也可以调用协程


不足：
1. 最大的缺点就是他的库支持的还是少


扩展阅读：
======

既然PyPy的速度是CPython的6.3倍，难道我不应该放弃CPython转用PyPy？
----------
http://blog.jobbole.com/49341/
简介：
就像其他人提到的，PyPy有很弱的C 语言扩展性。它支持C语言扩展，但是比Python本身的速度还慢。因此，很多模块本身就要求使用CPython.。

CPython 上的Numpy的数据处理性非常好，满足了那些既要求速度又大量使用Pandas, SciPy等数据分析任务的库的人。

所以，Pypy 要么不支持或者很弱支持C语言扩展，要么减慢了那些数据处理的速度。完全无法比拟既可以满足速度要求又简单易用的CPyhon。

第二点，Python 3的支持在现阶段还是实验期。那些使用最新版本的Python新功能的人，现在应该还不愿意扔掉那些还在新鲜期的新奇功能。

第三点，PyPy 并不是真正的脚本快，而大多数使用Python 的人就是在用脚本。这些脚本就是一些简短的程序。 PyPy 的最大优点是它针对长时间运行的简单数字处理的即时 (JIT) 编译器。直白地说， PyPy的先编译处理时间比CPython长的多。

第四点，惰性。转移到PyPy需要重新装备机器。这对很多用户或者使用机构来说，都是太多的额外工作了。

于我来说，以上就是主要影响我的原因。



利用pypy提高python脚本的执行速度及测试性能 
-------
http://www.tuicool.com/articles/NBjQBn 
简介： 
简单地说, PyPy 是用 Python 语言写了一个工具, 将 Python 代码成 C, .NET, Java 等语言和平台的代码. PHP 也有类似的项目 – HipHop-PHP, 把 PHP 代码转成 C++ 代码.

为什么要将一种语言转成另一种语言? 首先是目标语言可能在性能(如C语言)和/或跨平台(如 .NET, Java)等方面具有优势. 其次, 在转换的过程, 可以进行代码优化或加入新技术, 比如 PyPy 应用的 Just-in-Time(JIT) 技术, 能让 Python (事实上是转换后的目标代码)的执行速度更快.